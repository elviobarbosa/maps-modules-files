{"version":3,"file":"extension.js","mappings":"swBAAA,kBACA,YACA,WAMA,oBAAyBA,GAExBC,QAAQC,IAAI,iEAEZ,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,oCAAoC,KACpF,MAAMC,EAAgBH,EAAOI,UAAUC,SAGT,CAC7B,aACA,aACA,WACA,kBACA,sBACA,qBAGqBC,SAAQC,IACpB,MAAMC,EAAqBC,EAAKC,KAAKP,GAAiB,GAAII,GAE9DI,EAAGC,WAAWJ,KAClBG,EAAGE,UAAUL,EAAoB,CAAEM,WAAW,IAE/B,sBAAXP,GAyBR,SAA4BQ,EAAoBZ,EAAuBa,GArBjE,CACC,CACCA,SAAU,uBACVC,QAAS,uCAEV,CACCD,SAAU,uBACVC,QAAS,sCAgBJX,SAAQY,IACb,MAAMC,EAAWV,EAAKC,KAAKK,EAAYG,EAAKF,UAGtCI,EAAmBX,EAAKC,KAAKP,EAAee,EAAKD,SACjDI,EAAkBV,EAAGW,aAAaF,EAAkB,SAGpDG,EAAc,0BAA0BL,EAAKF,aAAaK,IAIjE,OAHLxB,QAAQC,IAAI,qBAAsBsB,GAE5BT,EAAGa,cAAcL,EAAUI,GACrBd,EAAKC,KAAKP,EAAee,EAAKD,QAAQ,GAGpD,CAzCKQ,CACCjB,EACAL,GAAiB,IAapB,IAGKH,EAAO0B,OAAOC,uBApCZ,GAoCqC,IAG9C/B,EAAQgC,cAAcC,KAAK9B,EAC5B,EAqBA,wBAA8B,C,UC3E9B+B,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,K,SCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://maps-modules/./src/extension.ts","webpack://maps-modules/external commonjs \"vscode\"","webpack://maps-modules/external node-commonjs \"fs\"","webpack://maps-modules/external node-commonjs \"path\"","webpack://maps-modules/webpack/bootstrap","webpack://maps-modules/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\ntype files = {\n\tfileName: string,\n\tcontent: string\n}\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconsole.log('Congratulations, your extension \"maps-modules\" is now active!');\n\n\tlet disposable = vscode.commands.registerCommand('maps-modules.createMapsStructure', () => {\n\t\tconst workspacePath = vscode.workspace.rootPath;\n\t\tlet t = ''\n\n        const folderStructure = [\n\t\t\t'components', \n\t\t\t'containers', \n\t\t\t'services', \n\t\t\t'services/entity', \n\t\t\t'services/repository',\n\t\t\t'services/usecases'\n\t\t];\n\n        folderStructure.forEach(folder => {\n            const folderPathToCreate = path.join(workspacePath || '', folder);\n            \n\t\t\tif (!fs.existsSync(folderPathToCreate)) {\n\t\t\t\tfs.mkdirSync(folderPathToCreate, { recursive: true });\n\n\t\t\t\tif (folder === 'services/usecases') {\n\t\t\t\t\tcreateUsecaseFiles(\n\t\t\t\t\t\tfolderPathToCreate, \n\t\t\t\t\t\tworkspacePath || '',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'CreateUserUseCase.ts',\n\t\t\t\t\t\t\t\tcontent: './src/templates/usecases/create.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'UpdateUserUseCase.ts',\n\t\t\t\t\t\t\t\tcontent: 'src/templates/usecases/update.txt'\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n        });\n\n        vscode.window.showInformationMessage(t);\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\nfunction createUsecaseFiles(folderPath: string, workspacePath: string, fileName: files[]) {\n    \n    fileName.forEach(file => {\n        const filePath = path.join(folderPath, file.fileName);\n\t    \n        // Ler o conteúdo de um arquivo existente (por exemplo, 'template.ts')\n        const templateFilePath = path.join(workspacePath, file.content);\n        const existingContent = fs.readFileSync(templateFilePath, 'utf-8');\n\n        // Incorporar o conteúdo existente no novo arquivo\n        const fileContent = `// Conteúdo do arquivo ${file.fileName}\\n${existingContent}`;\n\t\tconsole.log('Caminho do modelo:', templateFilePath);\n\n        fs.writeFileSync(filePath, fileContent);\n       return path.join(workspacePath, file.content);\n\t\t \n    });\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["context","console","log","disposable","vscode","commands","registerCommand","workspacePath","workspace","rootPath","forEach","folder","folderPathToCreate","path","join","fs","existsSync","mkdirSync","recursive","folderPath","fileName","content","file","filePath","templateFilePath","existingContent","readFileSync","fileContent","writeFileSync","createUsecaseFiles","window","showInformationMessage","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}