{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://maps-modules/./src/extension.ts","webpack://maps-modules/./src/utils.ts","webpack://maps-modules/external commonjs \"vscode\"","webpack://maps-modules/external node-commonjs \"fs\"","webpack://maps-modules/external node-commonjs \"path\"","webpack://maps-modules/webpack/bootstrap","webpack://maps-modules/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { createFiles, formatPrefix } from './utils';\n\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconsole.log('Congratulations, your extension \"maps-modules\" is now active!');\n\n\tlet disposable = vscode.commands.registerCommand('maps-modules.createMapsStructure', async () => {\n\t\t\n\t\tconst selectedFolders = await vscode.window.showOpenDialog({\n            canSelectFiles: false,\n            canSelectFolders: true,\n            canSelectMany: false,\n            openLabel: 'Select Folder'\n        });\n\n\t\tif (!selectedFolders || selectedFolders.length === 0) {\n            return;\n        }\n\n\t\tconst workspacePath = selectedFolders[0].fsPath;\n\n\t\tconst prefix = await vscode.window.showInputBox({\n            prompt: 'Qual o nome do mÃ³dulo?'\n        });\n\n        const folderStructure = [\n\t\t\t'/',\n\t\t\t'components', \n\t\t\t'containers', \n\t\t\t'services', \n\t\t\t'services/entities', \n\t\t\t'services/repository',\n\t\t\t'services/usecases',\n\t\t\t'services/mapper'\n\t\t];\n\n        folderStructure.forEach(folder => {\n            const folderPathToCreate = path.join(workspacePath || '', folder);\n            \n\t\t\tif (!fs.existsSync(folderPathToCreate)) {\n\t\t\t\tif (folder !== '/') {\n\t\t\t\t\tfs.mkdirSync(folderPathToCreate, { recursive: true });\n\t\t\t\t}\n\n\t\t\t\tif (folder === '/') {\n\t\t\t\t\tcreateFiles(\n\t\t\t\t\t\t'', \n\t\t\t\t\t\tworkspacePath || '',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'module.ts',\n\t\t\t\t\t\t\t\tcontent: 'module.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'routing.module.ts',\n\t\t\t\t\t\t\t\tcontent: 'routing.module.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tformatPrefix(prefix)\n\t\t\t\t\t);\n\t\t\t\t}\t\t\n\n\t\t\t\tif (folder === 'services/entities') {\n\t\t\t\t\tcreateFiles(\n\t\t\t\t\t\tfolderPathToCreate, \n\t\t\t\t\t\tworkspacePath || '',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'geral.entity.ts',\n\t\t\t\t\t\t\t\tcontent: 'entities/request-response.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tformatPrefix(prefix)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (folder === 'services/repository') {\n\t\t\t\t\tcreateFiles(\n\t\t\t\t\t\tfolderPathToCreate, \n\t\t\t\t\t\tworkspacePath || '',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'repository.ts',\n\t\t\t\t\t\t\t\tcontent: 'repository/repository.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tformatPrefix(prefix)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (folder === 'services/usecases') {\n\t\t\t\t\tcreateFiles(\n\t\t\t\t\t\tfolderPathToCreate, \n\t\t\t\t\t\tworkspacePath || '',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'active.usecase.ts',\n\t\t\t\t\t\t\t\tcontent: 'usecases/active.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'byid.usecase.ts',\n\t\t\t\t\t\t\t\tcontent: 'usecases/byid.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'create.usecase.ts',\n\t\t\t\t\t\t\t\tcontent: 'usecases/create.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'delete.usecase.ts',\n\t\t\t\t\t\t\t\tcontent: 'usecases/delete.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'list.usecase.ts',\n\t\t\t\t\t\t\t\tcontent: 'usecases/list.txt'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfileName: 'update.usecase.ts',\n\t\t\t\t\t\t\t\tcontent: 'usecases/update.txt'\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t],\n\t\t\t\t\t\tformatPrefix(prefix)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n        });\n\n        vscode.window.showInformationMessage('Arquivos criados com sucesso :]');\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\n\n","import * as path from 'path';\nimport * as fs from 'fs';\n\ntype files = {\n\tfileName: string,\n\tcontent: string\n}\n\nexport type FormatedPrefix = {\n    camelCase: string; \n    kebabCase: string\n}\n\nexport function formatPrefix(input: string = ''): FormatedPrefix {\n    if (!input) {\n        return { camelCase: '', kebabCase: '' };\n    }\n    const words = input.split(' ');\n\n    // Formatar para Camel Case\n    const camelCase = words\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join('');\n\n    // Formatar para Kebab Case\n    const kebabCase = words.join('-').toLowerCase();\n\n    return { camelCase, kebabCase };\n}\n\nexport function replacePrefixes(content: string, prefixCamelCase: string, prefixKebabCase: string): string {\n    return content\n        .replace(/\\[PREFIX-CAMELCASE\\]/g, prefixCamelCase)\n        .replace(/\\[PREFIX-KABEBCASE\\]/g, prefixKebabCase);\n}\n\nexport function createFiles(folderPath: string, workspacePath: string, fileName: files[], prefix: FormatedPrefix) {\n    \n    fileName.forEach(file => {\n        const filePath = path.join(folderPath, `${prefix.kebabCase}-${file.fileName}`);\n\t\tconst templateFilePath = path.join(__dirname, 'templates', file.content);\n        const existingContent = fs.readFileSync(templateFilePath, 'utf-8');\n        const fileContent = `${replacePrefixes(existingContent, prefix.camelCase, prefix.kebabCase)}`;\n\n        fs.writeFileSync(filePath, fileContent);\n        return path.join(workspacePath, file.content);\n\t\t \n    });\n}\n\n// function getCodeAsString(filePath: string): string | null {\n//     try {\n//         const content = fs.readFileSync(filePath, 'utf-8');\n//         return content;\n//     } catch (error) {\n//         console.error(`Erro ao ler o arquivo ${filePath}: ${error}`);\n//         return null;\n//     }\n// }\n\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["context","console","log","disposable","vscode","commands","registerCommand","async","selectedFolders","window","showOpenDialog","canSelectFiles","canSelectFolders","canSelectMany","openLabel","length","workspacePath","fsPath","prefix","showInputBox","prompt","forEach","folder","folderPathToCreate","path","join","fs","existsSync","mkdirSync","recursive","createFiles","fileName","content","formatPrefix","showInformationMessage","subscriptions","push","replacePrefixes","prefixCamelCase","prefixKebabCase","replace","input","camelCase","kebabCase","words","split","map","word","charAt","toUpperCase","slice","toLowerCase","folderPath","file","filePath","templateFilePath","__dirname","fileContent","readFileSync","writeFileSync","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}